{"wpm_test": {
	"scripts": [
		"timer.js",
		"checker.js",
		"copyPaste.js"
	],
	#INPUT#"inputElementsString": "<form>Time  remaining:<input id=\"txt\" readonly type=\"text\" value=\"\" border=\"0\" name=\"disp\">\n" +
		"	<br />\n" +
		"	<div id=\"inputText\" style=\"position:static;  width:823px;  height:166px;\">\n" +
		"	<textarea id=\"area1\"  onkeydown=\"return disableCtrlKeyCombination(event);\" onKeyUp=\"return disableCtrlKeyCombination(event);\"  style=\"font-family:Arial, Helvetica, sans-serif;\" readonly rows=\"10\" cols=\"133\"></textarea>"	+
		"	 	<div id=\"textCorrection\" style=\"position:relative ;  z-index:999;  top:-168px;left:0px;  width:inherit;  height:inherit;  background:white;  overflow:auto;  border:thin;  border-style:solid;  border-color:#B4B4B4;\">Type the text that appears here in the box below. Click Start to begin.	" +
		"		</div>" +
		"	 </div>" +
		"	<br /> " + 
		"	<input class=\"in\" type=\"submit\" action=\"vstart\" id=\"vStart\" value=\"Start Test\" />" +
		"	<input type=\"submit\" name=\"done\" id=\"done\" value=\"Done\" onClick=\"doneClicked();\" />" +
		"	 <br /> " + 
		"	<textarea id=\"userText\" onKeyDown=\"return disableCtrlKeyCombination(event); \" onKeyUp=\"diffString1(document.getElementById('area1').value,this.value);\" rows=\"10\" cols=\"100\" name=\"user_text\" ></textarea>" + 
		"	<br />  " +
		"	<div id=\"scoreTable\" >" +				 
		" 	</div></form>",#INPUT#
	#CONFIG#"configurationElementString":"<form><h2 style=\"color:teal\">Test Type</h2>" +
		"<label for=\"practiceRadio\"><input type=\"radio\" name=\"testType\" checked=\"checked\" value=\"false\" id=\"practiceRadio\" />Practice</label>" + 	
		"<label for=\"finalRadio\"><input type=\"radio\" name=\"testType\" value=\"true\" id=\"finalRadio\" />Final</label>" +
		"<div id=\"practiceDiv\">" +
		"<h3 style=\"color:teal\">Practice Exam (Instructor Input)</h3>" + 
		"<p>low and high WPM must be concentric around the midrange WPM</p>" +
		"<p>These are only for the illustration that happens below and are not important to the test itself</p>" +
		"<input id=\"lowWPM\" type=\"text\"  placeholder=\"low WPM...\" 	/>" +
		"<br>" + 
		"<input id=\"midWPM\" type=\"text\"  placeholder=\"midrange WPM...\" 	/>" + 
		"<br>" + 
		"<input id=\"highWPM\" type=\"text\" readonly=\"readonly\" placeholder=\"high WPM...\" 	/>" + 
		"<br>" +
		"<input id=\"PracticeTitle\" type=\"text\" name=\"title\" placeholder=\"Practice title...\" />" +
		"<br>" +
		"<p>Practice #</p>" +
		"<select id=\"practiceNum\" >" +
		"<option value=\"1\">1</option>" +
		"<option value=\"2\">2</option>" +
		"<option value=\"3\">3</option>" +
		"<option value=\"4\">4</option>" +
		"<option value=\"5\">5</option>" +
		"</select>" +
		"<br/>" +
		"<textarea id=\"practiceText\" name=\"assesment\" rows=\"8\" cols=\"64\" placeholder=\"the instructor will input the material for which the student will be assesed in this box\"></textarea>" +
		"<br/>" +
		"<br/>" +
		"<input id=\"practiceSubmit\" type=\"button\" value=\"Finished\" />" +
		"</div>" +
		"<div id=\"finalDiv\" >" +
		"<h3 style=\"color:teal\">Final Exam (Instructor Input)</h3>" +
		"<div class=\"align-left\">" +
		"Time limit (seconds):" +
		"</div>" +
		"<div>" +
		"<input id=\"timeLimit\" type=\"text\"  placeholder=\"time limit (seconds)...\" />" +
		"</div>" +
		"<div class=\"align-left\">" +
		"Total  points:" +
	"</div>"+
	"<div>"+
		"<input id=\"totalPoints\" type=\"text\" placeholder=\"Insert total point\"/>" +
	"</div><br />" +
	
	"<h4 style=\"color:teal\">Grading Options</h4>" +
	"<div class=\"align-left\">" +
		"Expected words per  minute:" +
	"</div>" +
	"<div>" +
		"<input id=\"ecpectedWPM\" type=\"text\" placeholder=\"Insert expected WPM\"/>" +
	"</div>" +
	"<div>" +
		"<input type=\"checkbox\" id=\"incldueErrors\" />Account for errors?" +
	"</div>" +
	"<div id=\"spaceFill\" style=\"height:1.5em\">" +
		"<div id=\"gradingOptions\" contenteditable=\"false\">" +
			"Subtract <input type=\"text\" style=\"max-width:20px\" id=\"errorValue\" />" +
			"<select id=\"errorValueType\">" +
				"<option value=\"percent\">percent</option>" +
				"<option value=\"points\">points</option>" +
			"</select>" +
			"per error" +
		"</div>" +
	"</div>" +
	"<div>" +
		"<span><textarea id=\"finalText\" rows=\"8\" cols=\"64\" placeholder=\"input test here...\"></textarea></span>" +
	"</div>" +
	"<div>" +
		"<span><input id=\"finalSubmit\" type=\"button\"  value=\"Finished\" /></span>" +
	"</div>" +
"</div>" +
"<div id=\"result\"></div>" +
"<div id=\"jsonR\"></div></form>",#CONFIG#
	"methods": 
	[
		#INPUT#{
			"name": "startClick",
			"type": "click",
			"id": "vStart",
			"handler":"function(){
				startCount++;
				if (startCount == 1){
					$.post(
						portalURL,
						{
							\"ia_type\":		\"wpm_test\",
							\"action\": 		\"start\",
							\"timeLimit\":	\"120\",
							\"totalPoint\":	\"10\",
							\"errorType\":	\"percent\",
							\"pointsOff\":	\"1\",
							\"expectedWPM\":	\"30\",
							\"text\":			\"This is the final.\"
						},
						/*For when the files save properly*/
						function(data){
							if(typeof data === \"string\")
								text_area = JSON.parse(data);
							else
								text_area = data;
							document.getElementById(\"area1\").innerHTML = text_area.welcome.les_text;
							document.getElementById(\"textCorrection\").innerHTML = text_area.welcome.les_text;
							var seconds = text_area.time; 
							//IsLog.c(seconds);
							InitTimer(seconds);
						},
						\"json\"
					);
				}
				var message=\"Sorry, right-click has been disabled\"; 
				function clickIE() {if (document.all) {(message);return false;}} 
				function clickNS(e) {if 
				(document.layers||(document.getElementById&&!document.all)) { 
				if (e.which==2||e.which==3) {(message);return false;}}} 
				if (document.layers) 
					{document.captureEvents(Event.MOUSEDOWN);document.onmousedown=clickNS;} 
				else{document.onmouseup=clickNS;document.oncontextmenu=clickIE;} 
				document.oncontextmenu=new Function(\"return false\");
				function submitScores() {
					if(initialized == true && doneClicked == true) {
						setScore(cpm);
						window.clearInterval(intervalVar);
					}
				}
			}"
		},
		{
			"name": "doneClick",
			"type": "click",
			"id": "done",
			"handler":"function(){
				doneCount++;
				userInput = $('textarea#userText').val();
				var Jstring = JSON.stringify(userInput);
				if (doneCount == 1){
					$.post(
						portalURL,
						{
							\"ia_type\":		\"wpm_test\",
							\"action\":		\"done\",
							\"ui\":			userInput
						},
						function(data){
							table = JSON.parse(data);
							document.getElementById(\"scoreTable\").innerHTML = table.scores;
							StopTimer();
						}
					);
				}
				setScore(table.grade);
			}"
		}#INPUT#
		#CONFIG#{
			"name": "startup",
			"fireAutomatically": true,
			"type": "change",
			"id": "practiceRadio",
			"handler":"function(e){
				var optionsChecked = false;
				$(\"#finalDiv\").hide(); 		/*	initally hides the final input information	*/
				$(\"#gradingOptions\").hide();	/*	initially hides the grading options */
				$(\".align-left\").css(\"float\",\"left\");	/*	formats the text so it ligns up */
				$(\".align-left\").css(\"min-width\",\"200px\");
				$(\"#incldueErrors\").change( 		/*	hides and shows grading options based on whether or not the checkbox is checked	*/
					function(){
						if(this.checked){
							$(\"#gradingOptions\").show(\"fast\");
							optionsChecked = true;
						}else{
							$(\"#gradingOptions\").hide();
							optionsChecked = false;
						}
					}
				);
				$(\"#finalRadio\").change( 		/* when \"final\" radio is chosen, the practice information is hidden and the final information is shown */
					function(){
						if(this.checked){
							$(\"#practiceDiv\").hide();
							$(\"#finalDiv\").show();
						}	
					}
				);
				$(\"#practiceRadio\").change( 	/* when \"final\" radio is chosen, the practice information is hidden and the final information is shown */
					function(){
						if(this.checked){
							$(\"#finalDiv\").hide();
							$(\"#practiceDiv\").show();
						}	
					}
				);
//the low, mid and high WPM values need to be concesntric around the mid, for the purpose the game, so the high is calculated to avoid confusion and errors
				$(\"#lowWPM\").change(changeValue); 
				$(\"#midWPM\").change(changeValue);
				function changeValue(){
					var lowWPM = $(\"#lowWPM\").val() * 1;		/*	multiplied by 1 to convert from a string to an int	*/
					var midWPM = $(\"#midWPM\").val() * 1;
					if( lowWPM != \"\" && midWPM != \"\"){
						if(lowWPM  <=  midWPM )
							$(\"#highWPM\").val(2*midWPM - lowWPM); 
					}
				}
				$(\"#practiceSubmit\").click(stringToJSONPractice);	/*	attaching event to the submit buttons	*/
				$(\"#finalSubmit\").click(stringToJSONFinal);
				function stringToJSONPractice(){					/*	creates a JSON string to be submitted to the portal, and then becomes a text file. Specifically for Practice as it has different inputs	*/
					var error = false;										/*	error originally set to false. If a field is not filled out properly, error will be set to true and a message will be displayed	*/
					var errorMessage = \"These fields cannot be blank:\\n\";
					var JSONString = \"\";
					var lowWPM = $(\"#lowWPM\").val();
					var midWPM = $(\"#midWPM\").val();
					var title = $(\"#PracticeTitle\").val();
					var text = $(\"#practiceText\").val();
					if(lowWPM == \"\"){
						errorMessage += \"low WPM\\n\";
						error = true;	
					}
					if( midWPM == \"\"){
						errorMessage += \"mid WPM\\n\";
						error = true;	
					}
					if( title == \"\"){
						errorMessage += \"title\\n\";
						error = true;	
					}
					if( text == \"\"){
						errorMessage += \"text\\n\";
						error = true;	
					}
					if(!error){
						//JSON string created with all the necessary information
						jsonString = \"\" +
							'{ ' + 
								'\"lowWPM\":' +	JSON.stringify(lowWPM) + ', ' +
								'\"midWPM\":' + JSON.stringify(midWPM) +', ' +
								'\"highWPM\":' + JSON.stringify($(\"#highWPM\").val()) + ', ' +
								'\"title\":' + JSON.stringify(title) + ', ' + 
								'\"practiceNum\":' + JSON.stringify($(\"#practiceNum\").val()) + ', ' +
								'\"text\":' + JSON.stringify(text) + ', ' +
								'\"userID\":' + JSON.stringify(window.parent.bhUserId) +
							'}';
						/*	posting to PHP portal which saves file	*/
						$.post(
							portalURL,
							{
								\"ia_type\":\"wpm_test\",
								\"type\":\"practice\",
								\"action\":\"create\",
								\"JSONString\":jsonString,
								\"courseTitle\": (window.parent.bhCourseTitle)?window.parent.bhCourseTitle:\"UNTITLED\",
								\"courseID\": (window.parent.bhCourseId)?window.parent.bhCourseId:\"NOCOURSEID\",
								\"itemID\": (window.parent.bhItemId)?window.parent.bhItemId:\"NOTIEMID\",
								\"itemTitle\": (window.parent.bhItemTitle)?window.parent.bhItemTitle:\"NOTITLE\"
							},
							function(data) {
								IsLog.c(data);			//posts success or failure to console
								$(\"#inputBody\").html(\"<h2>Assesment created successsfully</h2>\");
							}
						);
					}else{
						alert(errorMessage);		//creates an alert dialogue with fields needing to be filled out
					}
				}
				function stringToJSONFinal(){
					/*	same comments as above but adjusted for final	*/
					var error = false;
					var errorMessage = \"These fields cannot be blank:\\n\";
					var JSONString = \"\";
					var timeLimit = $(\"#timeLimit\").val();
					var totalPoints = $(\"#totalPoints\").val();
					var finalText = $(\"#finalText\").val();
					var expectedWPM = $(\"#ecpectedWPM\").val();
					var errorValue = $(\"#errorValue\").val();
					var errorType = $(\"#errorValueType\").val();
					if(timeLimit == \"\"){
						errorMessage += \"time limit\\n\";
						error = true;	
					}
					if(totalPoints == \"\"){
						errorMessage += \"total points\\n\";
						error = true;	
					}
					if(finalText == \"\"){
						errorMessage += \"text\\n\";
						error = true;	
					}
					if(expectedWPM == \"\"){
						errorMessage += \"expected words per minute\\n\";
						error = true;	
					}
					if(optionsChecked){
						if(errorValue == \"\"){
							errorMessage += \"error value\\n\";
							error = true;	
						}
					}else{
						errorValue = null;
						errorType = null;
					}		
					if(!error){
							jsonString = '{ ' +
								'\"timeLimit\":' + JSON.stringify(timeLimit)  + ', ' +
								'\"totalPoint\":' + JSON.stringify(totalPoints) + ', ' +
								'\"errorType\":' + JSON.stringify(errorType)  + ', ' +
								'\"errorValue\":' + JSON.stringify(errorValue) + ', ' +
								'\"expectedWPM\":' + JSON.stringify(expectedWPM) + ', ' +
								'\"text\":' + JSON.stringify(finalText) + ', ' +
								'\"userID\":' + JSON.stringify(window.parent.bhUserId) +
							'}';
						var postVars = {
							\"ia_type\":\"wpm_test\",
							\"type\":\"final\",
							\"JSONString\":jsonString, /*\"bhCourseId\":window.parent.bhCourseId,*/
							\"bhCourseID\":\"practiceClass\",
							\"action\":\"create\",
							\"domain\": bhDomain,
							\"courseTitle\": (window.parent.bhCourseTitle)?window.parent.bhCourseTitle:\"UNTITLED\",
							\"courseID\": (window.parent.bhCourseId)?window.parent.bhCourseId:\"NOCOURSEID\",
							\"itemID\": (window.parent.bhItemId)?window.parent.bhItemId:\"NOTIEMID\",
							\"itemTitle\": (window.parent.bhItemTitle)?window.parent.bhItemTitle:\"NOTITLE\"
						};
						IsLog.c(postVars);
						$.post(
							portalURL,
							postVars,
							function(data) {
								IsLog.c(data);
								$(\"#inputBody\").html(\"<h2>Assesment created successsfully</h2>\");
							}
						);
					}else{
						alert(errorMessage);	
					}
				}
			}"
		}#CONFIG#	
	]
}}