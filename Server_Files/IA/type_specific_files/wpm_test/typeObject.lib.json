{"wpm_test": {
	"scripts": [
		"timer.js",
		"copyPaste.js",
		"stringMatcher.js"
	],
	#EXAM#"inputElementsString": "<div class=\"eheading\">Typing Exam</div>" +
		"	<form class=\"exam\">" +
		"	<div class=\"etext\">Time remaining:" +
		"	<input id=\"txt\" readonly type=\"text\" value=\"\" border=\"0\" >" +
		"	</div>" +
		"	" +
		"	<div id=\"textCorrection\" class=\"etext\" style=\"position:relative ; height:180px;    background:white;  overflow:auto;  border:thin;  border-style:solid;  border-color:#B4B4B4;\">Type the text that appears here in the box below. Click Start to begin.	" +
		"	</div>" +
		"	<input class=\"ebutton\" type=\"button\" id=\"vStart\" value=\"Start Test\" />" +
		"	<input class=\"ebutton\" type=\"button\" id=\"done\" value=\"Done\" />" +
		"	 <br /> " + 
		"	<textarea id=\"userText\" class=\"etext\" rows=\"8\" ></textarea>" + 
		"	<br />  " +
		"	<div id=\"scoreTable\" class=\"etext\">" +				 
		" 	</div>"+
		"	<input id=\"accesskey\" type=\"hidden\" name=\"accessKey\" >" + 
		"	</div></form>"#EXAM#
		#PRAC#"inputElementsString": "<div class=\"pheading\">Practice Typing Activity</div>" +
		"	<form class=\"practice\">" +
		"	<div class=\"ptext\">Time remaining:" +
		"	<input id=\"txt\" readonly type=\"text\" value=\"\" border=\"0\" >" +
		"	Practice #<select id=\"PracSelect\" class=\"pbutton\">" +
		"		<option selected=\"selected\">--Select Practice--</option>" +
		"	</select>" +
		"	</div>" +
		"	<input id=\"area1\" type=\"hidden\" />" +
		"	<div id=\"textCorrection\" class=\"ptext\" style=\"position:relative ; height:180px;    background:white;  overflow:auto;  border:thin;  border-style:solid;  border-color:#B4B4B4;\">Type the text that appears here in the box below. Click Start to begin.	" +
		"	</div>" +
		"	<br /> " + 
		"	<input type=\"button\" class=\"pbutton\" id=\"vStart\" value=\"Start Test\" />" +
		"	<input type=\"button\" class=\"pbutton\" id=\"done\" value=\"Done\" />" +
		"	 <br /> " + 
		"	<textarea id=\"userText\" class=\"ptext\" rows=\"8\"></textarea>" + 
		"	<br />  " +
		"	<div id=\"scoreTable\" >" +				 
		" 	</div></form>"#PRAC#
	#CONFIG#"configurationElementString":"<h2>Typing Assessment Configurator</h2>" +
		"<div class=\"everything\"<select id=\"pracFin\" class=\"options\">" +
		"	<option value=\"practice\">Practice</option>" +
		"	<option value=\"exam\">Exam</option>" +
		"</select>" +
		"<br/>" +
		"<div class=\"options\">" +
		"	<div class=\"align-left\">" +
		"		Time limit (seconds):" +
		"	</div>" +
		"</div>" +
		"<div>" +
		"	<input id=\"timeLimit\" type=\"text\" class=\"options\" placeholder=\"time limit (seconds)...\" 	/>" +
		"</div>" +
		"<div class=\"options\">" +
		"	<div class=\"align-left\">" +
		"		Expected words per minute:" +
		"	</div>" +
		"</div>" +
		"<div>" +
		"	<input id=\"expectedWPM\" type=\"text\" class=\"options\" placeholder=\"Insert expected WPM\"/>" +
		"</div>" +
		"<div class=\"options\">" +
		"	How to account for errors:" +
		"	<select id=\"gradingType\" class=\"options\">" +
		"		<option value=\"default\">default</option>" +
		"		<option value=\"custom\">custom</option>" +
		"	</select>" +
		"</div>" +
		"<div id=\"customSettings\" class=\"options\">" +
		"</div>" +
		"<div class=\"options\">" +
		"	Number of Possible Texts:" +
		"	<select id=\"numTexts\" class=\"options\">" +
		"		<option value=\"1\">1</option>" +
		"		<option value=\"2\">2</option>" +
		"		<option value=\"3\">3</option>" +
		"		<option value=\"4\">4</option>" +
		"		<option value=\"5\">5</option>" +
		"		<option value=\"6\">6</option>" +
		"		<option value=\"7\">7</option>" +
		"		<option value=\"8\">8</option>" +
		"		<option value=\"9\">9</option>" +
		"		<option value=\"10\">10</option>" +
		"	</select>" +
		"</div>" +
		"<br/>" +
		"<div id=\"tooShort\">" +
		"</div>" +
		"<div id=\"textfields\" >" +
		"</div>" +
		"<br/>" +
		"<input id=\"assessmentSubmit\" type=\"button\" value=\"Finished\" class=\"IAbutton\" />" +
		"<div id=\"result\"></div>" +
		"<div id=\"jsonR\"></div></div>"#CONFIG#,
	"methods": 
	[
		
		#EXAM#{
			"name": "startClick",
			"type": "click",
			"id": "vStart",
			"handler":"function(){
				$.post(
					portalURL,
					{
						\"ia_type\":\"wpm_test\",
						\"courseTitle\": (window.parent.bhCourseTitle)?window.parent.bhCourseTitle:\"UNTITLED\",
						\"courseID\": (window.parent.bhCourseId)?window.parent.bhCourseId:\"NOCOURSEID\",
						\"itemID\": (window.parent.bhItemId)?window.parent.bhItemId:\"NOTIEMID\",
						\"itemTitle\": (window.parent.bhItemTitle)?window.parent.bhItemTitle:\"NOTITLE\",
						\"action\": \"start\",
					},
					/*For when the files save properly*/
					function(data){
						IsLog.timerOn();
						if(typeof data === \"string\"){
							text_area = JSON.parse(data);
						}else{
							text_area = data;
						}
						
						document.getElementById(\"textCorrection\").innerHTML = text_area.welcome.les_text;
						window[\"typingTextInputId\"] = \"userText\";
						window[\"typingTextOutputId\"] = \"textCorrection\";
						window[\"typingText\"] = text_area.welcome.les_text;
						if(typeof window[\"typingText\"] != \"undefined\")
							var primaryText = window[\"typingText\"];
						else {
							IsLog.c(\"Error: can't match string, 'typingText' not defined.\");
							return -1;
						}
						if(typeof window[\"typingTextOutputId\"] != \"undefined\") {
							if($(\"#\"+window[\"typingTextOutputId\"])) {
								var outputElement = $(\"#\"+window[\"typingTextOutputId\"]);
								outputElement.html(document.createTextNode(primaryText));
							} else {
								IsLog.c(\"Error: can't output results, '#\"+window[\"typingTextOutputId\"]+\"' element not found.\");
								return -1;
							}
						} else {
							IsLog.c(\"Error: can't output results, 'typingTextOutputId' not defined.\");
							return -1;
						}
						var seconds = text_area.time; 
						IsLog.c(seconds);
						InitTimer(seconds);
						IsLog.c(\"Timer should have started\");
					},
					\"json\"
				);			
			}"
		},
		{
			"name":	"keyCounter",
			"id": "userText",
			"type": "keydown",
			"handler": "function(event) {
				var counter = $(\"#accesskey\");
				if(counter) {
					var count = (typeof counter.val() == \"undefined\")?0:parseInt(counter.val(),16);
					// IsLog.c(\"IA: wpm_test counter: \"+(counter.val()));
					counter.val(((isNaN(count))?0:count+1).toString(16));
				} else {
					IsLog.c(\"IA: wpm_test; ERROR: no count element found.\");
				}
				if(event.keyCode == 32 || this.originalEvent instanceof MouseEvent || this.originalEvent instanceof TouchEvent) {
				updateTestDisplay();
				} 
			}"
		},
		{
			"name":	"disableAllEvents",
			"id":"area1",
			"type": "click change keypress keydown update contextmenu",
			"handler": "function(e) {
				if(e == null) {
					e = arguments[0];
				}
				IsLog.c(\"Disabled event type \"+e.type);
				return false;
			}"
		},
		{
			"name":	"disableSpecificMouseandKeyboardEvents",
			"id":"userText",
			"type": "click change keypress keydown update contextmenu",
			"handler": "function(e) {
				if(e == null) {
					e = arguments[0];
				}
				//IsLog.c(e);
				if(e.type == \"contextmenu\")
					return false;
				if(e.type.indexOf(\"mouse\") > -1) {
					this.focus();
					return false;
				}
				if(e.ctrlKey == true) {
					return false;
				}
			}"
		},
		{
			"name": "doneClick",
			"type": "click",
			"id": "done",
			"handler":"function(){
				userInput = $('textarea#userText').val();
				var Jstring = JSON.stringify(userInput);
				StopTimer();
				$.post(
					portalURL,
					{
						\"ia_type\":		\"wpm_test\",
						\"action\":		\"done\",
						\"courseTitle\": (window.parent.bhCourseTitle)?window.parent.bhCourseTitle:\"UNTITLED\",
						\"courseID\": (window.parent.bhCourseId)?window.parent.bhCourseId:\"NOCOURSEID\",
						\"itemID\": (window.parent.bhItemId)?window.parent.bhItemId:\"NOTIEMID\",
						\"itemTitle\": (window.parent.bhItemTitle)?window.parent.bhItemTitle:\"NOTITLE\",
						\"ui\":			userInput
					},
						function(data){
							var table = JSON.parse(data);
							document.getElementById(\"scoreTable\").innerHTML = table.scores;
							
							setScore(table.grade);
						}
				);
			}"
		}#EXAM#
		#PRAC#{
			"name": "init",
			"fireAutomatically": true,
			"type": "change",
			"tag": "infoGetter",
			"handler":"function(){
				$.post(
					portalURL,
					{
						\"ia_type\": \"wpm_test\",
						\"courseTitle\": (window.parent.bhCourseTitle)?window.parent.bhCourseTitle:\"UNTITLED\",
						\"courseID\": (window.parent.bhCourseId)?window.parent.bhCourseId:\"NOCOURSEID\",
						\"itemID\": (window.parent.bhItemId)?window.parent.bhItemId:\"NOTIEMID\",
						\"itemTitle\": (window.parent.bhItemTitle)?window.parent.bhItemTitle:\"NOTITLE\",
						\"action\": \"default_case\"
					},
					function(data) {
						var targetElement = $('#PracSelect');
						var numOfTexts;
						var JSONobj;
						if(typeof data === \"string\"){
							JSONobj = JSON.parse(data);
						}else{
							JSONobj = data;
						}
						IsLog.c(JSONobj);
						numOfTexts = parseInt(JSONobj.numTexts);	
						for(i = 0; i < numOfTexts; i++) {
							var textArea = $(\"<option value=\\\"\"+i+\"\\\">\"+(i+1)+\"</option>\");
							targetElement.append(textArea);
							/*	initAssessmentObjects();	*/
						}
						if(this instanceof HTMLElement) {
							for(var i=0; i < assessmentElements.length; i++) {
								if(typeof assessmentElements[i].setEvents == \"function\") {
									assessmentElements[i].setEvents();
								}
							}
						}
					}
				);
			}"
		},
		{
			"name": "startClick",
			"type": "click",
			"id": "vStart",
			"handler":"function(){
				$.post(
					portalURL,
					{
						\"ia_type\":		\"wpm_test\",
						\"courseTitle\": (window.parent.bhCourseTitle)?window.parent.bhCourseTitle:\"UNTITLED\",
						\"courseID\": (window.parent.bhCourseId)?window.parent.bhCourseId:\"NOCOURSEID\",
						\"itemID\": (window.parent.bhItemId)?window.parent.bhItemId:\"NOTIEMID\",
						\"itemTitle\": (window.parent.bhItemTitle)?window.parent.bhItemTitle:\"NOTITLE\",
						\"action\": \"start\",
						\"selectedPrac\": $('#PracSelect').val()
					},				
					function(data){
						if(typeof data === \"string\"){
							text_area = JSON.parse(data);
						}else{
							text_area = data;
						}
						document.getElementById(\"textCorrection\").innerHTML = text_area.welcome.les_text;
						window[\"typingTextInputId\"] = \"userText\";
						window[\"typingTextOutputId\"] = \"textCorrection\";
						window[\"typingText\"] = text_area.welcome.les_text;
						if(typeof window[\"typingText\"] != \"undefined\")
							var primaryText = window[\"typingText\"];
						else {
							IsLog.c(\"Error: can't match string, 'typingText' not defined.\");
							return -1;
						}
						if(typeof window[\"typingTextOutputId\"] != \"undefined\") {
							if($(\"#\"+window[\"typingTextOutputId\"])) {
								var outputElement = $(\"#\"+window[\"typingTextOutputId\"]);
								outputElement.html(document.createTextNode(primaryText));
							} else {
								IsLog.c(\"Error: can't output results, '#\"+window[\"typingTextOutputId\"]+\"' element not found.\");
								return -1;
							}
						} else {
							IsLog.c(\"Error: can't output results, 'typingTextOutputId' not defined.\");
							return -1;
						}
						var seconds = text_area.time; 
						InitTimer(seconds);
					},
					\"json\"
				);
			}"
		},
		{
			"name":	"disableAllEvents",
			"id":"area1",
			"type": "click change keypress keydown update contextmenu",
			"handler": "function(e) {
				if(e == null) {
					e = arguments[0];
				}
				IsLog.c(\"Disabled event type \"+e.type);
				return false;
			}"
		},
		{
			"name":	"disableSpecificMouseandKeyboardEvents",
			"id":"userText",
			"type": "click change keypress keydown update contextmenu",
			"handler": "function(e) {
				if(e == null) {
					e = arguments[0];
				}
				//IsLog.c(e);
				if(e.type == \"contextmenu\")
					return false;
				if(e.type.indexOf(\"mouse\") > -1) {
					this.focus();
					return false;
				}
				if(e.ctrlKey == true) {
					return false;
				}
				if(e.keyCode == 32 || this.originalEvent instanceof MouseEvent || this.originalEvent instanceof TouchEvent) {
				updateTestDisplay();
				} 
			}"
		},
		{
			"name": "doneClick",
			"type": "click",
			"id": "done",
			"handler":"function(){
				userInput = $('textarea#userText').val();
				var Jstring = JSON.stringify(userInput);
				StopTimer();
				$.post(
					portalURL,
					{
						\"ia_type\":		\"wpm_test\",
						\"action\":		\"done\",
						\"courseTitle\": (window.parent.bhCourseTitle)?window.parent.bhCourseTitle:\"UNTITLED\",
						\"courseID\": (window.parent.bhCourseId)?window.parent.bhCourseId:\"NOCOURSEID\",
						\"itemID\": (window.parent.bhItemId)?window.parent.bhItemId:\"NOTIEMID\",
						\"itemTitle\": (window.parent.bhItemTitle)?window.parent.bhItemTitle:\"NOTITLE\",
						\"ui\":			userInput
					},
					function(data){
						var table = JSON.parse(data);
						document.getElementById(\"scoreTable\").innerHTML = table.scores;
						setScore(table.grade);
					}
				);				
			}"
		}#PRAC#
		#CONFIG#{
			"name": "startup",
			"fireAutomatically": true,
			"type": "change",
			"id": "numTexts",
			"handler": "function(){
				var textStrings= new Array();
	
				$(\".align-left\").css(\"float\",\"left\");			/*	formats the text so it ligns up	*/
				$(\".align-left\").css(\"min-width\",\"200px\");
				
				if(window['textStrings'] == undefined)
					window['textStrings'] = [];				
			}"
		},{
			"name": "finished",
			"type": "click",
			"id": "assessmentSubmit",
			"handler": "function() {
				var validTimeLimit = true;
				var maxLoops = 10;
				var loopCount = 0;
				while(maxLoops > loopCount && $(\".error-text\").length > 0) {
					$(\".error-text\").remove();
				}
				if(typeof window['textStrings'] != \"object\") {
					IsLog.c(\"textStrings reset: \"+(typeof window['textStrings']));
					IsLog.c(window['textStrings']);
					window['textStrings'] = [];
				} else {
					IsLog.c(\"textStrings found, not reset: \"+window['textStrings']);
				}
				var time = $(\"#timeLimit\").val();
				var invalidIndex = -1;
				for(i = 0; i < $('#numTexts').val(); i++){
					IsLog.c(window['textStrings']);
					if(window['textStrings'].length > i) {
						strLen=(window['textStrings'][i].length) / 5;
						if (strLen < (time * 2)){
							validTimeLimit = false;
							invalidIndex = i;
							break;
						}
					} else {
						validTimeLimit = false;
						invalidIndex = 0;
					}
				}

				if(validTimeLimit == true) {
					var error = false;
					var errorMessage = \"These fields cannot be blank: \";
					var JSONString = \"\";
					
					var formInputs = $(\"input,textarea,select\");
					
					var requiredFields = {
						\"timeLimit\":\"You need a time limit.\",
						\"expectedWPM\":\"You need an expected words per min.\",
						\"errorValue\":\"You need to penalize errors (you could put zero).\",
						\"errorValue\":\"You need to penalize errors (you could put zero).\",
					};
					
					var formObject = {};					
					for(var i=0; i < formInputs.length; i++) {
						if(([\"assessmentSubmit\"]).indexOf($(formInputs[i]).attr(\"id\")) == -1) {
							var objectKey = (($(formInputs[i]).attr(\"id\"))?$(formInputs[i]).attr(\"id\"):$(formInputs[i]).attr(\"name\"));
							if(formObject[objectKey] == null)
								formObject[objectKey] = ($(formInputs[i]).val().trim());
							else if($(formInputs[i]).val() != \"\") {
								if(typeof formObject[objectKey] == \"string\")
									formObject[objectKey] = [formObject[objectKey]];
								formObject[objectKey].push($(formInputs[i]).val().trim());
							}
						}
					}
					JSONString = JSON.stringify(formObject);
					$.post(
						portalURL,
						{
							\"ia_type\":\"wpm_test\",
							\"type\":$(\"#pracFin\").val(),
							\"JSONString\":JSONString,
							\"domain\": bhDomain,
							\"courseTitle\": (window.parent.bhCourseTitle)?window.parent.bhCourseTitle:\"UNTITLED\",
							\"courseID\": (window.parent.bhCourseId)?window.parent.bhCourseId:\"NOCOURSEID\",
							\"itemID\": (window.parent.bhItemId)?window.parent.bhItemId:\"NOTIEMID\",
							\"itemTitle\": (window.parent.bhItemTitle)?window.parent.bhItemTitle:\"NOTITLE\",
							\"action\":\"create\"
						},
						function(data) {
							IsLog.c(JSONString);
							$(\"body\").append($(\"<h2>Assesment created successsfully</h2>\"));
						}
					);
				} else {
					var shortText = $(\"<h2 class=\\\"error-text\\\" style=\\\"color:red\\\" >A text field is not long enough or the time limit is so long that students could finish before time expires.</h2>\");
					try {
						IsLog.c($(\"textarea\"));
						IsLog.c(invalidIndex);
						shortText.insertBefore($(\"textarea\")[invalidIndex]);
					} catch (err) {
						alert('error:'+err.message);
					}
				}
			}"
		},{
			"name": "customErrors",
			"type": "change",
			"id": "gradingType",
			"handler": "function() {
				var targetElement = $('#customSettings');
				targetElement.empty();	
				if($('#gradingType').val()==\"custom\"){
					
				var textArea = $(\"<h3>Deductions for:</h3><div class=\\\"align-left\\\">Missed words:</div><input id=\\\"missedWord\\\" type=\\\"text\\\" style=\\\"max-width:50px\\\" placeholder=\\\"2.5\\\"/><br/><div class=\\\"align-left\\\">Extra Words:</div><input id=\\\"extraWord\\\" type=\\\"text\\\" style=\\\"max-width:50px\\\" placeholder=\\\"2.5\\\"/><br/><div class=\\\"align-left\\\">One Letter Errors:</div><input id=\\\"oneLetterError\\\" type=\\\"text\\\" style=\\\"max-width:50px\\\" placeholder=\\\".5\\\"/><br/><div class=\\\"align-left\\\">Two Letter Errors:</div><input id=\\\"twoLetterError\\\" type=\\\"text\\\" style=\\\"max-width:50px\\\" placeholder=\\\"1\\\"/><br/><div class=\\\"align-left\\\">Many Errors:</div><input id=\\\"manyErrors\\\" type=\\\"text\\\" style=\\\"max-width:50px\\\" placeholder=\\\"5\\\"/><br/><br/>\");
				targetElement.append(textArea);
				}
				
				if(this instanceof HTMLElement) {
					for(var i=0; i < assessmentElements.length; i++) {
						if(typeof assessmentElements[i].setEvents == \"function\") {
							assessmentElements[i].setEvents();
						}
					}
				}
			}"
		},{
			"name": "addInput",
			"type": "change",
			"id": "numTexts",
			"fireAutomatically": true,
			"handler": "function() {
				var targetElement = (($('#textfields').length > 0)?$($('#textfields')[0]):null);
				if(!targetElement)
					return -1;
				var loopCount = 0;
				var maxLoops = 10;
				var textArea = $(\"textarea\")[$(\"textarea\").length-1];
				while(loopCount <= maxLoops && textArea) {
					if($(textArea).val())
						window['textStrings'][$(\"textarea\").length-1] = $(textArea).val();
					textArea.parentElement.removeChild(textArea);
					loopCount++;
					textArea = $(\"textarea\")[$(\"textarea\").length-1];
				}
				
				targetElement.empty();
				
				for(i = 0; i < $('#numTexts').val(); i++) {
					var textArea = $(\"<textarea rows=\\\"8\\\" cols=\\\"64\\\" placeholder=\\\"the instructor will input the material for which the student will be assesed in this box\\\"></textarea>\");
					textArea.attr(\"name\", \"text\");
					var additionalFormatting = $(\"<br/>\");
					if(textStrings[i])
						textArea.val(window['textStrings'][i]);
					targetElement.append(textArea);
					targetElement.append(additionalFormatting);
					/*	initAssessmentObjects();	*/
				}
				if(this instanceof HTMLElement) {
					for(var i=0; i < assessmentElements.length; i++) {
						if(typeof assessmentElements[i].setEvents == \"function\") {
							assessmentElements[i].setEvents();
						}
					}
				}
			}"
		},{
			"name": "updateTextStrings",
			"type": "keyup",
			"tag": "textarea",
			"handler": "function() {
				if(typeof window['textStrings'] != \"object\")
					window['textStrings'] = [];
				var targetElement = this;
				var allTextareas = $(\"textarea\");
				var targetElementIndex = -1;
				for(var i=allTextareas.length-1; i >= 0; i--) {
					if(targetElement == allTextareas[i]) {
						targetElementIndex = i;
						IsLog.c(\"Found textarea target\");
						break;
					}
				}
				if(targetElementIndex > -1) {
					IsLog.c(\"textStrings index:\"+targetElementIndex);
					window['textStrings'][targetElementIndex] = this.value;
				} else {
					IsLog.c(\"textStrings is not found.\");
				}
				IsLog.c(window['textStrings']);
			}"
		}#CONFIG#	
	]
}}