{"wpm_test": {
	"scripts": [
		"timer.js",
		"copyPaste.js",
		"NEWchecker.js?v=1.6"
	],
	#EXAM#"inputElementsString": "inputElementsExam.html"#EXAM#
		#PRAC#"inputElementsString": "inputElementsPractice.html"#PRAC#
	#CONFIG#"configurationElementString":"configureElements.html"#CONFIG#,
	"methods": 
	[
		
		#EXAM#{
			"name": "init",
			"fireAutomatically": true,
			"type": "change",
			"tag": "infoGetter",
			"handler":"examInit.js"
		},
		{
			"name": "startClick",
			"type": "click",
			"id": "vStart",
			"handler":"examStartClick.js"
		},
		{
			"name":	"keyCounter",
			"id": "userText",
			"type": "keydown",
			"handler": "function(event) {
				var counter = $(\"#accesskey\");
				if(counter) {
					var count = (typeof counter.val() == \"undefined\")?0:parseInt(counter.val(),16);
					// IsLog.c(\"IA: wpm_test counter: \"+(counter.val()));
					counter.val(((isNaN(count))?0:count+1).toString(16));
				} else {
					IsLog.c(\"IA: wpm_test; ERROR: no count element found.\");
				}
			}"
		},
		{
			"name":	"disableAllEvents",
			"id":"area1",
			"type": "click change keypress keydown update contextmenu",
			"handler": "function(e) {
				if(e == null) {
					e = arguments[0];
				}
				IsLog.c(\"Disabled event type \"+e.type);
				return false;
			}"
		},
		{
			"name":	"disableSpecificMouseandKeyboardEvents",
			"id":"userText",
			"type": "click change keypress keydown update contextmenu",
			"handler": "function(e) {
				
				userInput = $('textarea#userText').val();
				originalText = $('textarea#area1').val();
				
				letterCompare(originalText,userInput);
				
				
				if(e == null) {
					e = arguments[0];
				}
				//IsLog.c(e);
				if(e.type == \"contextmenu\")
					return false;
				if(e.type.indexOf(\"mouse\") > -1) {
					this.focus();
					return false;
				}
				if(e.ctrlKey == true) {
					return false;
				}
			}"
		},
		{
			"name": "doneClick",
			"type": "click",
			"id": "done",
			"handler":"examDoneClick.js"
		}#EXAM#
		#PRAC#{
			"name": "init",
			"fireAutomatically": true,
			"type": "change",
			"tag": "infoGetter",
			"handler":"practiceInit.js"
		},
		{
			"name": "startClick",
			"type": "click",
			"id": "vStart",
			"handler":"practiceStartClick.js"
		},
		{
			"name":	"disableAllEvents",
			"id":"area1",
			"type": "click change keypress keydown update contextmenu",
			"handler": "function(e) {
				if(e == null) {
					e = arguments[0];
				}
				IsLog.c(\"Disabled event type \"+e.type);
				return false;
			}"
		},
		{
			"name":	"disableSpecificMouseandKeyboardEvents",
			"id":"userText",
			"type": "click change keypress keydown update contextmenu",
			"handler": "function(e) {
				
				userInput = $('textarea#userText').val();
				originalText = $('textarea#area1').val();
				
				letterCompare(originalText,userInput);
				
				if(e == null) {
					e = arguments[0];
				}
				//IsLog.c(e);
				if(e.type == \"contextmenu\")
					return false;
				if(e.type.indexOf(\"mouse\") > -1) {
					this.focus();
					return false;
				}
				if(e.ctrlKey == true) {
					return false;
				}
			}"
		},
		{
			"name": "doneClick",
			"type": "click",
			"id": "done",
			"handler":"practiceDoneClick.js"
		}#PRAC#
		#CONFIG#{
			"name": "startup",
			"fireAutomatically": true,
			"type": "change",
			"id": "numTexts",
			"handler": "function(){
				var textStrings= new Array();
	
				$(\".align-left\").css(\"float\",\"left\");			/*	formats the text so it ligns up	*/
				$(\".align-left\").css(\"min-width\",\"200px\");
				
				if(window['textStrings'] == undefined)
					window['textStrings'] = [];				
			}"
		},{
			"name": "finished",
			"type": "click",
			"id": "assessmentSubmit",
			"handler": "configDoneClick.js"
		}, {
			"name": "addInput",
			"type": "change",
			"id": "numTexts",
			"fireAutomatically": true,
			"handler": "function() {
				var targetElement = (($('#textfields').length > 0)?$($('#textfields')[0]):null);
				if(!targetElement)
					return -1;
				var loopCount = 0;
				var maxLoops = 10;
				var textArea = $(\"textarea\")[$(\"textarea\").length-1];
				while(loopCount <= maxLoops && textArea) {
					if($(textArea).val())
						window['textStrings'][$(\"textarea\").length-1] = $(textArea).val();
					textArea.parentElement.removeChild(textArea);
					loopCount++;
					textArea = $(\"textarea\")[$(\"textarea\").length-1];
				}
				
				targetElement.empty();
				
				for(i = 0; i < $('#numTexts').val(); i++) {
					var textArea = $(\"<textarea rows=\\\"8\\\" cols=\\\"64\\\" placeholder=\\\"the instructor will input the material for which the student will be assesed in this box\\\"></textarea>\");
					textArea.attr(\"name\", \"text\");
					var additionalFormatting = $(\"<br/>\");
					if(textStrings[i])
						textArea.val(window['textStrings'][i]);
					targetElement.append(textArea);
					targetElement.append(additionalFormatting);
					/*	initAssessmentObjects();	*/
				}
				if(this instanceof HTMLElement) {
					for(var i=0; i < assessmentElements.length; i++) {
						if(typeof assessmentElements[i].setEvents == \"function\") {
							assessmentElements[i].setEvents();
						}
					}
				}
			}"
		},{
			"name": "updateTextStrings",
			"type": "keyup",
			"tag": "textarea",
			"handler": "function() {
				if(typeof window['textStrings'] != \"object\")
					window['textStrings'] = [];
				var targetElement = this;
				var allTextareas = $(\"textarea\");
				var targetElementIndex = -1;
				for(var i=allTextareas.length-1; i >= 0; i--) {
					if(targetElement == allTextareas[i]) {
						targetElementIndex = i;
						IsLog.c(\"Found textarea target\");
						break;
					}
				}
				if(targetElementIndex > -1) {
					IsLog.c(\"textStrings index:\"+targetElementIndex);
					window['textStrings'][targetElementIndex] = this.value;
				} else {
					IsLog.c(\"textStrings is not found.\");
				}
				IsLog.c(window['textStrings']);
			}"
		}#CONFIG#	
	]
}}